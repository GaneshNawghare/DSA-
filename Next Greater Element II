class Solution {
    public int[] nextGreaterElements(int[] nums) {
       int n=nums.length;
       int[] ans=new int[n];
		int[] pref=new int[n];
		pref[0]=nums[0];
		for(int i=1;i<n;i++){
			pref[i]=Math.max(nums[i],pref[i-1]);
		  }
		Stack<Integer> st=new Stack<>();
		int max1=0;
		for(int i=n-1;i>=0;i--){
			//max1=Math.max(nums[i],max1);
			while(!st.isEmpty() && nums[i]>=st.peek()){
				st.pop();
			}
			if(st.isEmpty()){
			   for(int j=0;j<i;j++){
                   if(nums[j]>nums[i])
                    { 
                        ans[i]=nums[j];
                        break;
                    }
                    ans[i]=-1;
               }
               if(ans[i]==0 && i==0)
                ans[i]=-1;
			}
			else ans[i]=st.peek();
			st.push(nums[i]);
		}
		return ans;
    }
}
